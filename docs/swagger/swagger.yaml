definitions:
  domain.Kind:
    enum:
    - ACCESS
    - REFRESH
    type: string
    x-enum-varnames:
    - KindAccess
    - KindRefresh
  domain.Token:
    properties:
      kind:
        allOf:
        - $ref: '#/definitions/domain.Kind'
        description: Kind (토큰의 종류)
      per:
        description: Permission (권한)
        type: string
      userID:
        description: 사용자의 ID
        type: integer
    type: object
  presenter.FindUserResponse:
    properties:
      id:
        type: integer
      nickname:
        type: string
      provider:
        type: string
      resolution:
        type: string
    type: object
  presenter.PatchUserRequest:
    properties:
      nickname:
        type: string
      resolution:
        type: string
    type: object
  presenter.RefreshResponse:
    properties:
      accessToken:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/users/{id}:
    get:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenter.FindUserResponse'
      security:
      - Bearer: []
      tags:
      - users
    patch:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: PatchUserRequest
        in: body
        name: PatchUserRequest
        required: true
        schema:
          $ref: '#/definitions/presenter.PatchUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - Bearer: []
      tags:
      - users
  /auth/refresh:
    post:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenter.RefreshResponse'
      security:
      - Bearer: []
      tags:
      - auth
  /auth/validate:
    post:
      parameters:
      - description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Token'
      security:
      - Bearer: []
      tags:
      - auth
swagger: "2.0"
