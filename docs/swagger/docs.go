// Package swagger Code generated by swaggo/swag. DO NOT EDIT
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/groups": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "parameters": [
                    {
                        "description": "List Groups Request",
                        "name": "ListGroupsRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presenter.ListGroupsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenter.ListGroupsResponse"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "parameters": [
                    {
                        "description": "Create Group Request",
                        "name": "CreateGroupRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presenter.CreateGroupRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/presenter.CreateGroupResponse"
                        }
                    }
                }
            }
        },
        "/api/groups/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenter.FindGroupResponse"
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenter.FindUserResponse"
                        }
                    }
                }
            },
            "patch": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "PatchUserRequest",
                        "name": "PatchUserRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presenter.PatchUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenter.PatchUserResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Provider": {
            "type": "string",
            "enum": [
                "GOOGLE",
                "APPLE",
                "KAKAO"
            ],
            "x-enum-varnames": [
                "ProviderGoogle",
                "ProviderApple",
                "ProviderKakao"
            ]
        },
        "presenter.CreateGroupRequest": {
            "type": "object",
            "required": [
                "bookAuthor",
                "bookPageMax",
                "bookTitle"
            ],
            "properties": {
                "bookAuthor": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "bookIntroduction": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 0
                },
                "bookPageMax": {
                    "type": "integer",
                    "minimum": 0
                },
                "bookPublisher": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 0
                },
                "bookTitle": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "presenter.CreateGroupResponse": {
            "type": "object",
            "properties": {
                "bookAuthor": {
                    "type": "string"
                },
                "bookIntroduction": {
                    "type": "string"
                },
                "bookPageMax": {
                    "type": "integer"
                },
                "bookPublisher": {
                    "type": "string"
                },
                "bookTitle": {
                    "type": "string"
                }
            }
        },
        "presenter.FindGroupResponse": {
            "type": "object",
            "properties": {
                "bookAuthor": {
                    "type": "string"
                },
                "bookIntroduction": {
                    "type": "string"
                },
                "bookPageMax": {
                    "type": "integer"
                },
                "bookPublisher": {
                    "type": "string"
                },
                "bookTitle": {
                    "type": "string"
                }
            }
        },
        "presenter.FindUserResponse": {
            "type": "object",
            "properties": {
                "nickname": {
                    "type": "string"
                },
                "provider": {
                    "$ref": "#/definitions/domain.Provider"
                },
                "resolution": {
                    "type": "string"
                }
            }
        },
        "presenter.ListGroupsRequest": {
            "type": "object",
            "required": [
                "limit"
            ],
            "properties": {
                "limit": {
                    "type": "integer",
                    "minimum": 0
                },
                "offset": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "presenter.ListGroupsResponse": {
            "type": "object",
            "properties": {
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenter.ListGroupsResponseItem"
                    }
                }
            }
        },
        "presenter.ListGroupsResponseItem": {
            "type": "object",
            "properties": {
                "bookAuthor": {
                    "type": "string"
                },
                "bookIntroduction": {
                    "type": "string"
                },
                "bookPageMax": {
                    "type": "integer"
                },
                "bookPublisher": {
                    "type": "string"
                },
                "bookTitle": {
                    "type": "string"
                }
            }
        },
        "presenter.PatchUserRequest": {
            "type": "object",
            "properties": {
                "nickname": {
                    "type": "string",
                    "maxLength": 12,
                    "minLength": 3
                },
                "resolution": {
                    "type": "string",
                    "maxLength": 18,
                    "minLength": 0
                }
            }
        },
        "presenter.PatchUserResponse": {
            "type": "object",
            "properties": {
                "nickname": {
                    "type": "string"
                },
                "resolution": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
